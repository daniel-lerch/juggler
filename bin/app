#!/usr/bin/env bash

function help() {
    cat <<EOT
Juggler CLI
Usage:  app [OPTION]... <command>

EOT

core_commands_overview

cat <<EOT
Options:
  -a            Manage all applications installed on this system
  -n <name>     Manage an application with the specified project name
  -h            Show this help message

EOT
}

function about_help() {
    echo "Run app -h for more information."
}

function try_find_directory() {
    local workdir=$(pwd)
    while true; do
        if [[ $workdir == "/" ]]; then
            break
        elif [[ -e "$workdir/docker-compose.yml" ]]; then
            DIRECTORY=$workdir
            break
        else
            workdir=$(dirname $workdir)
        fi
    done
}

function execute_command() {
    local command=$1
    shift
    eval "cmd_$command \$@"
}

function main() {
    local named=0
    local help=0
    while getopts ":n:h" arg; do
        case $arg in
            n)
                named=1

                # getopts ensures that $OPTARG is not empty
                DIRECTORY="/opt/$OPTARG"
                if [[ ! -d $DIRECTORY ]]; then
                    echo "Directory not found: $DIRECTORY"
                    exit 1
                elif [[ ! -e "$DIRECTORY/docker-compose.yml" ]]; then
                    echo "No compose file found in $DIRECTORY"
                    exit 1
                fi
                ;;
            h)
                help=1
                ;;
            \?)
                echo "Invalid option: '$OPTARG'"
                about_help
                exit 1
                ;;
            :)
                echo "Invalid option: '$OPTARG' requires an argument"
                about_help
                exit 1
                ;;
        esac
    done
    shift $((OPTIND-1))

    if [[ $named -eq 0 ]]; then
        try_find_directory
    fi

    # Load core script which implements all commands
    source /opt/juggler/lib/core.sh
    core_load_config

    if [[ $help -eq 1 ]]; then
        help
        exit 0
    fi

    if [[ -z $DIRECTORY ]]; then
        echo "No compose file found in this directory and its parents"
        exit 1
    else
        core_init $DIRECTORY
    fi

    if [[ -z $1 ]]; then
        echo "Missing command"
        about_help
        exit 1
    fi

    declare -F "cmd_$1" > /dev/null
    if [[ $? -ne 0 ]]; then
        echo "Invalid command: '$1'"
        about_help
        exit 1
    fi

    execute_command $@
    exit 0
}

main $@

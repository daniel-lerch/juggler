#!/usr/bin/env bash

function init() {
    # Initialize variables
    PROJECT_DIR=$1
    PROJECT_NAME=$(basename $PROJECT_DIR)
    local group_directory=$(dirname $PROJECT_DIR)
    PROJECT_GROUP=$(basename $group_directory)
    PROJECT_TITLE="$PROJECT_GROUP/$PROJECT_NAME"
    COMPOSE_FILE="$PROJECT_DIR/docker-compose.yml"
    COMPOSE_PROJECT_NAME="$PROJECT_GROUP-$PROJECT_NAME"
    APP_CONTAINER_NAME="$COMPOSE_PROJECT_NAME-app"

    # Load include file with custom functions
    if [[ -e "$PROJECT_DIR/juggler_include.sh" ]]; then
        source "$PROJECT_DIR/juggler_include.sh"
    fi
}

function update_env_file() {
    # Generate .env file with default variables
    cat > "$PROJECT_DIR/.env" <<EOT
# This file was generated by Juggler. Do not edit.
# Make your changes in juggler.env instead.

# Default variables
PROJECT_DIR=$PROJECT_DIR
PROJECT_NAME=$PROJECT_NAME
PROJECT_GROUP=$PROJECT_GROUP
PROJECT_TITLE=$PROJECT_TITLE
COMPOSE_PROJECT_NAME=$COMPOSE_PROJECT_NAME
APP_CONTAINER_NAME=$APP_CONTAINER_NAME
EOT

    # Process additional variables
    if [[ -e "$PROJECT_DIR/juggler.env" ]]; then
        printf "\n# Custom variables (parsed from juggler.env)\n" >> "$PROJECT_DIR/.env"

        # Replace placeholder and executed embedded commands
        # https://stackoverflow.com/a/17030953
        eval "cat <<EOF
$(<$PROJECT_DIR/juggler.env)
EOF
" >> "$PROJECT_DIR/.env"
    fi
}

function invoke_composer() {
    # TODO: Omit sudo if not required
    sudo docker-compose -f $COMPOSE_FILE -p $COMPOSE_PROJECT_NAME $@
}

function cmd_up() {
    if [[ $1 == "-f" ]]; then
        invoke_composer down
    fi
    update_env_file
    invoke_composer up -d
}

function cmd_down() {
    invoke_composer down
}
